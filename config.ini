# Конфигурационный файл программы анализа трафаретов
# Версия: 5.0
# Все пути указываются относительно расположения main.py или абсолютно

[GENERAL]
# ФИО оператора по умолчанию (можно изменить при запуске)
default_operator_name = Иванов И.И.

# Количество цифр в номере заказа (для валидации и генерации примера)
order_number_digits = 6

# Режим отладки по умолчанию (true/false)
# В режиме отладки автоматически включается сохранение промежуточных изображений
debug_mode = false

[PATHS]
# Папка с Gerber-файлами (эталонами)
gerber_folder = ./gerber_files

# Папка для сканов (где программа ожидает появления новых файлов)
scan_folder = ./scans

# Папка для сохранения результатов
output_folder = ./results

# Создавать ли отдельную подпапку для каждого заказа (true/false)
# Формат имени подпапки: {order_number}_{timestamp}
create_order_subfolder = true

[SCANNING]
# Инструкция для оператора по сканированию (выводится на экран)
scan_instruction = Установите разрешение 1200 dpi, проверьте ориентацию, совместите трафарет по маркерам на столе. Нажмите Enter после завершения сканирования.

# Частота проверки появления файла скана (в секундах)
file_check_interval = 3

# DPI по умолчанию, если не найдено в метаданных изображения
default_dpi = 600

# Приоритет источника DPI: metadata/config
# metadata - использовать DPI из метаданных файла (если есть)
# config - всегда использовать default_dpi из конфигурации
dpi_priority = metadata

# Поддерживаемые форматы файлов изображений (через запятую)
supported_image_formats = .png,.jpg,.jpeg,.tiff,.tif,.bmp

[GERBER_SEARCH]
# Правило выбора файла, если найдено несколько с одинаковым номером заказа:
# alphabetic_first - первый по алфавиту
# newest - последний по дате изменения
# oldest - первый по дате изменения
multiple_files_rule = alphabetic_first

[IMAGE_PREPROCESSING]
# Допустимое отклонение размеров скана от эталона (в процентах)
size_tolerance_percent = 5.0

# Действие при частичной предобработке (когда размеры не совпадают в пределах допуска):
# ignore - игнорировать предупреждение и продолжить
# ask_user - спросить пользователя о дальнейших действиях
partial_preprocessing_action = ignore

# Минимальный размер контура для фильтрации (в пикселях)
min_contour_size = 10

# Параметры бинаризации изображения
# Тип бинаризации: otsu, adaptive, threshold
binarization_type = otsu

# Пороговое значение для обычной бинаризации (0-255)
threshold_value = 127

# Размер окна для адаптивной бинаризации
adaptive_block_size = 11

# Константа для адаптивной бинаризации
adaptive_c = 2

[IMAGE_COMPARISON]
# Учитывать ли отражение (зеркальное отображение) при совмещении
consider_reflection = false

# Возможные углы поворота для проверки (через запятую)
rotation_angles = 0,90,180,270

# Размер минимального контура относительно минимального размера полигона
# Коэффициент от 1.0 до 10.0
min_contour_coefficient = 2.0

# Параметры для cv2.estimateAffine2D
ransac_reprojection_threshold = 3.0
max_iterations = 2000
confidence = 0.99
refine_iterations = 10

# Пороги корреляции для оценки результата совмещения
# Низкий порог - совмещение не удалось
low_correlation_threshold = 0.2

# Средний порог - граница между неудачным совмещением и браком
medium_correlation_threshold = 0.4

# Высокий порог - хорошее совмещение
high_correlation_threshold = 0.8

[VISUALIZATION]
# Цвета для результирующего изображения совмещения (RGB)
# Цвет эталона (красный)
reference_color_r = 255
reference_color_g = 0
reference_color_b = 0

# Цвет скана (голубой)
scan_color_r = 0
scan_color_g = 255
scan_color_b = 255

# Цвет пересечения (белый)
intersection_color_r = 255
intersection_color_g = 255
intersection_color_b = 255

# Размер шрифта для информационного поля на изображении
info_font_size = 20

# Цвет текста информационного поля (RGB)
info_text_color_r = 255
info_text_color_g = 255
info_text_color_b = 255

# Цвет фона информационного поля (RGB)
info_background_color_r = 0
info_background_color_g = 0
info_background_color_b = 0

[OUTPUT]
# Сохранять ли все промежуточные изображения
save_intermediate_images = false

# Сохранять ли финальное изображение совмещения
save_final_image = true

# Действие при существующих файлах:
# overwrite - перезаписывать
# increment - добавлять суффикс _1, _2, и т.д.
existing_files_action = increment

# Шаблоны имен файлов (XXXXX заменяется на номер заказа)
# Бинарный эталон
gerber_image_filename = {order_number}_1_gerber.png

# Исходный скан
original_scan_filename = {order_number}_2_scan.png

# Обработанный скан
processed_scan_filename = {order_number}_3_scan_prep.png

# Результат совмещения
comparison_result_filename = {order_number}_4_compared.png

# Подробный лог
detailed_log_filename = {order_number}_5_log_detailed.txt

# Краткий лог
short_log_filename = {order_number}_6_log_short.txt

[LOGGING]
# Уровень ведения лога:
# none - не вести лог
# short - краткий лог
# detailed - подробный лог
log_level = short

# Формат даты и времени в логах
datetime_format = %%Y-%%m-%%d %%H:%%M:%%S

# Шаблон краткого лога
short_log_template = 
Дата и время: {datetime}
Оператор: {operator_name}
Номер заказа: {order_number}
Результат корреляции: {correlation_result:.3f}
Статус совмещения: {alignment_status}

# Включать ли в лог отладочную информацию (углы поворота, смещения)
include_debug_info = false

[PYTHON_REQUIREMENTS]
# Минимальная версия Python
min_python_version = 3.8

# Список обязательных модулей (через запятую)
required_modules = cv2,numpy,Pillow,matplotlib,scipy

# Команда для установки модулей (выводится пользователю при отсутствии)
install_command = pip install opencv-python numpy Pillow matplotlib scipy

[SYSTEM]
# Кодировка для работы с текстовыми файлами
text_encoding = utf-8

# Максимальный размер файла скана (в МБ, 0 - без ограничений)
max_scan_file_size = 100

# Таймаут ожидания файла скана (в секундах, 0 - без ограничений)
scan_wait_timeout = 300

# Автоматическое удаление временных файлов
cleanup_temp_files = true

[ADVANCED]
# Использовать ли многопоточность для обработки изображений
use_multithreading = false

# Количество потоков (0 - автоопределение)
thread_count = 0

# Уровень сжатия для сохраняемых PNG изображений (0-9)
png_compression_level = 6

# Качество для JPEG изображений (1-100)
jpeg_quality = 95

# Максимальное разрешение для обработки изображений (пиксели)
# Если изображение больше, оно будет уменьшено
max_processing_resolution = 4096

# Включить ли профилирование производительности
enable_profiling = false